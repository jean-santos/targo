on:
  push:
    branches: [ main, auto, canary ]
  pull_request:
    branches:
      - main

name: CI
env:
  RUSTFLAGS: -D warnings
  CARGO_TERM_COLOR: always

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
      - name: Lint (clippy)
        run: cargo clippy --all-features --all-targets
      - name: Lint (rustfmt)
        run: cargo xfmt --check

  build-rustdoc:
    name: Build documentation
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
      - name: Build rustdoc
        run: cargo doc --all-features --workspace

  build:
    name: Build and test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          # - windows-latest
        rust-version: stable
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust-version }}
      - uses: Swatinem/rust-cache@v2
        with:
          # Matrix instances (other than OS) need to be added to this explicitly
          key: ${{ matrix.rust-version }}
      - name: Build targo
        run: cargo build --package targo
      - name: Build all targets
        run: cargo build --all-targets
      - name: Doctests
        run: cargo test --doc
      - name: Install latest nextest release
        uses: taiki-e/install-action@nextest
      - name: Test with latest nextest release
        run: cargo nextest run --profile ci
